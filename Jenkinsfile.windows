/* -*- mode: groovy -*-
  Configure how to run our job in Jenkins.
  This runs on Windows.
  See https://castle-engine.io/cloud_builds_jenkins .
*/

library 'cag-shared-jenkins-library'

pipeline {
  options {
    /* While concurrent builds of CGE work OK,
       they stuck Jenkins much with too many long-running builds.
       Better to wait for previous build to finish. */
    disableConcurrentBuilds()
  }
  agent {
    label 'windows-cge-builder'
  }
  environment {
    /* Used by CGE build tool ("castle-engine").
       Define env based on another env variable.
       According to https://github.com/jenkinsci/pipeline-model-definition-plugin/pull/110
       this should be supported. */
    CASTLE_ENGINE_PATH = "${WORKSPACE}"
    PATH = "${PATH};${CASTLE_ENGINE_PATH}/installed/bin/" // Note: on Windows, PATH is separated by ;
  }
  stages {
    stage('Info') {
      steps {
        // check versions (and availability) of our requirements early
        sh 'fpc -iV'
        sh 'lazbuild --version'
        sh 'make --version'
      }
    }
    stage('Cleanup') {
      steps {
        sh "repository_cleanup . --remove-unversioned"
      }
    }
    stage('Build Tools') {
      steps {
        sh 'rm -Rf installed/'
        sh 'mkdir -p installed/'
        /* TODO: do not use "make install" command, as somewhere the Windows path gets
           messed up and in the end we have created files like this:

           "tools/build-tool/data/E\357\200\272jworkspacecastle_game_engine_delphi_master/installed/share/castle-engine/android/integrated-services/google_play_games/app/src/main/java/net/sourceforge/castleengine/ServiceGooglePlayGames.java"
        */
        // sh 'make clean tools install PREFIX=${CASTLE_ENGINE_PATH}/installed/'
        sh 'make clean tools'
        sh 'mkdir -p ${CASTLE_ENGINE_PATH}/installed/bin/'
        sh 'cp tools/build-tool/castle-engine.exe ${CASTLE_ENGINE_PATH}/installed/bin/'
      }
    }
    stage('Build Examples') {
      steps {
        sh 'make clean examples'
      }
    }
    stage('Build And Run Auto-Tests') {
      steps {
        sh 'make tests'
      }
    }
    stage('Build Using FpMake') {
      steps {
        sh 'make clean test-fpmake'
      }
    }
  }
  post {
    //success {
      /* archiveArtifacts artifacts: 'escape_universe-*.tar.gz,escape_universe-*.zip,escape_universe*.apk,web-story/test_escape_universe_story-*.zip,web-story/test_escape_universe_story-*.tar.gz' */
    //}
    regression {
      mail to: 'michalis@castle-engine.io',
        subject: "[jenkins] Build started failing: ${currentBuild.fullDisplayName}",
        body: "See the build details on ${env.BUILD_URL}"
    }
    failure {
      mail to: 'michalis@castle-engine.io',
        subject: "[jenkins] Build failed: ${currentBuild.fullDisplayName}",
        body: "See the build details on ${env.BUILD_URL}"
    }
    fixed {
      mail to: 'michalis@castle-engine.io',
        subject: "[jenkins] Build is again successful: ${currentBuild.fullDisplayName}",
        body: "See the build details on ${env.BUILD_URL}"
    }
  }
}
