{ -*- buffer-read-only: t -*-

  Copyright 2015-2022 Michalis Kamburelis.

  This file is part of "Castle Game Engine".

  "Castle Game Engine" is free software; see the file COPYING.txt,
  included in this distribution, for details about the copyright.

  "Castle Game Engine" is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

  ----------------------------------------------------------------------------
}

{ Automatically generated node properties.

  Do not edit this file manually!
  To add new properties:
  - add them to the text files in tools/internal/x3d-nodes-to-pascal/nodes-specification/ ,
  - and regenerate include files by running x3d-nodes-to-pascal .

  The documentation for properties should go to x3dnodes_documentation.txt . }

{$ifdef read_interface}

  public
    procedure CreateNode; override;
    class function ClassX3DType: string; override;

    strict private FEventSet_boolean: TSFBoolEvent;
    { X3D in event "set_boolean". } { }
    public property EventSet_boolean: TSFBoolEvent read FEventSet_boolean;

    strict private FEventTriggerTime: TSFTimeEvent;
    { X3D out event "triggerTime". } { }
    public property EventTriggerTime: TSFTimeEvent read FEventTriggerTime;

{$endif read_interface}

{$ifdef read_implementation}

{ TTimeTriggerNode ----------------------------------------------- }

class function TTimeTriggerNode.ClassX3DType: String;
begin
  Result := 'TimeTrigger';
end;

procedure TTimeTriggerNode.CreateNode;
begin
  inherited;

  FEventSet_boolean := TSFBoolEvent.Create(Self, 'set_boolean', true);
  AddEvent(FEventSet_boolean);

  FEventTriggerTime := TSFTimeEvent.Create(Self, 'triggerTime', false);
  AddEvent(FEventTriggerTime);
end;

{$endif read_implementation}
